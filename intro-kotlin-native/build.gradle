import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTargetWithTests

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.5.0'
}

repositories {
    mavenCentral()
}

kotlin {
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    KotlinNativeTargetWithTests nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    nativeTarget.with {
        compilations.main {
            cinterops {
                libcurl /*{
                    defFile project.file("src/nativeInterop/cinterop/libcurl.def")
                    packageName 'com.jetbrains.handson.http'
                    compilerOpts '-I/'
                    includeDirs.allHeaders("curl/curl.h")
                }*/
            }
        }
        binaries {
            executable {
                // Change to specify fully qualified name of your application's entry point:
                entryPoint = 'com.jetbrains.handson.http.main'
                // Specify command-line arguments, if necessary:
                runTask?.args('')
            }
        }
    }
    sourceSets {
        // Note: To enable common source sets please comment out 'kotlin.import.noCommonSourceSets' property
        // in gradle.properties file and re-import your project in IDE.
        nativeMain {

        }
        nativeTest {

        }
    }
}
